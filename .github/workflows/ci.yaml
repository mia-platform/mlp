name: Continuous Integration Pipeline
on:
  push:
    branches:
    - main
    tags:
    - "*"
  pull_request:
    branches:
    - main
    paths-ignore:
    - "**/*.md"
    - docs/**
    - examples/**

env:
  GORELEASER_VERSION: v2.3.2
jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        show-progress: false
    - name: Setup Golang
      uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
      with:
        go-version-file: go.mod
        cache: false
    - name: Set golangci-lint Cache Key
      id: create-sha
      run: |
        echo "GOLANGCILINT_SHA=$(cat ./tools/GOLANGCI_LINT_VERSION | sha256sum - | awk '{ print $1 }')" >> $GITHUB_ENV
    - name: Setup golangci-lint Cache
      uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
      with:
        path: |
          ./tools/bin
        key: ${{ runner.os }}-go-${{ env.GOLANGCILINT_SHA }}
        restore-keys: |
          ${{ runner.os }}-go-${{ env.GOLANGCILINT_SHA }}
    - name: Run Lint CI
      run: make ci-lint GOLANGCI_LINT_MODE="github-actions"

  test:
    name: Testing on ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
    runs-on: ${{ matrix.os }}
    env:
      GOEXPERIMENT: nocoverageredesign
    steps:
    - name: Checkout Repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        show-progress: false
    - name: Setup Golang
      uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
      with:
        go-version-file: go.mod
    - name: Run Test Coverage
      run: make ci

  conformance-test:
    name: Testing against Kubernetes ${{ matrix.kind_node_image }}
    runs-on: ubuntu-latest
    needs:
    - test
    strategy:
      matrix:
        kind_node_image:
        - kindest/node:v1.31.0@sha256:53df588e04085fd41ae12de0c3fe4c72f7013bba32a20e7325357a1ac94ba865
        - kindest/node:v1.30.4@sha256:976ea815844d5fa93be213437e3ff5754cd599b040946b5cca43ca45c2047114
        - kindest/node:v1.29.8@sha256:d46b7aa29567e93b27f7531d258c372e829d7224b25e3fc6ffdefed12476d3aa
        - kindest/node:v1.28.13@sha256:45d319897776e11167e4698f6b14938eb4d52eb381d9e3d7a9086c16c69a8110
        - kindest/node:v1.27.17@sha256:3fd82731af34efe19cd54ea5c25e882985bafa2c9baefe14f8deab1737d9fabe
    env:
      KIND_NODE_IMAGE: ${{matrix.kind_node_image}}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        show-progress: false
    - name: Setup Golang
      uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
      with:
        go-version-file: go.mod
    - name: Setup Kind
      uses: helm/kind-action@0025e74a8c7512023d06dc019c617aa3cf561fde # v1.10.0
      with:
        install_only: true
    - name: Run Conformance Tests
      run: make test-conformance

  build:
    name: Build for Supported Architectures
    runs-on: ubuntu-latest
    needs:
    - lint
    - conformance-test
    if: github.event_name != 'push'
    steps:
    - name: Checkout Repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        show-progress: false
    - name: Setup Golang
      uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
      with:
        go-version-file: go.mod
    - name: Setup Goreleaser
      uses: goreleaser/goreleaser-action@286f3b13b1b49da4ac219696163fb8c1c93e1200 # v6.0.0
      with:
        version: ${{ env.GORELEASER_VERSION }}
        install-only: true
    - name: Run Build Multiarchitecture
      run: make build-multiarch

  publish-release:
    runs-on: ubuntu-latest
    needs:
    - lint
    - conformance-test
    if: github.event_name == 'push'
    steps:
    - name: Checkout Repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        show-progress: false
        fetch-depth: 0
    - name: Setup Golang
      uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
      with:
        go-version-file: go.mod
    - name: Setup Goreleaser
      uses: goreleaser/goreleaser-action@286f3b13b1b49da4ac219696163fb8c1c93e1200 # v6.0.0
      with:
        version: ${{ env.GORELEASER_VERSION }}
        install-only: true
    - name: Set Snapshot Release Environment
      if: github.ref_type == 'branch'
      run: |
        echo "SNAPSHOT_RELEASE=1" >> $GITHUB_ENV
    - name: Run Goreleaser
      run: make ci-release SNAPSHOT_RELEASE=${SNAPSHOT_RELEASE}
      env:
        GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
    - name: Upload Binaries Artifacts
      uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
      with:
        name: artifacts
        path: bin/

  publish-docker:
    runs-on: ubuntu-latest
    needs:
    - publish-release
    steps:
    - name: Checkout Repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        show-progress: false
    - name: Download Binaries
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        name: artifacts
        path: bin/
    - name: Restore Executable Permissions
      run: |
        find ./bin/{darwin,linux} -type f -exec chmod +x {} \;
    - name: Docker Login to GitHub Repository
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Docker Login to DockerHub
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
      with:
        username: ${{ secrets.BOT_DOCKER_USERNAME }}
        password: ${{ secrets.BOT_DOCKER_TOKEN }}
    - name: Setup QEMU
      run: make docker-setup-multiarch
    - name: Setup Buildx Context
      id: buildx
      uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1
    - name: Build Latest Image
      run: make ci-docker BUILDX_CONTEXT=${{ steps.buildx.outputs.name }}
