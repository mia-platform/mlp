name: Test Build Docker image and Release
on:
  pull_request:
    types: [opened]
  push:
jobs:
  tests:
    name: Test k8s ${{ matrix.k8s_version }} on os ${{matrix.os}} - go version ${{ matrix.go_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go_version: [1.16]
        os: [ubuntu-latest]
        k8s_version: ['1.22', '1.21', '1.20', '1.19']
    env:
      ENVTEST_K8S_VERSION: ${{matrix.k8s_version}}
    steps:
      - uses: actions/checkout@v2
      - name: Use golang ${{ matrix.go_version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go_version }}
      - name: Go version
        run: go version
      - uses: actions/cache@v2
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run tests
        run: make test
      - name: Build
        run: make build
      - name: Send the coverage output
        uses: codecov/codecov-action@v2
        with:
          files: ./cover.out

  docker-build:
    name: Build docker image
    needs: tests
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/mia-platform/mlp
            docker.io/miaplatform/mlp
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker Login to ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.BOT_DOCKER_USERNAME }}
          password: ${{ secrets.BOT_DOCKER_TOKEN }}

      - name: Cache build
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  goreleaser:
    name: Go Releaser
    needs: tests
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Unshallow
        run: git fetch --prune --unshallow
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
